const int MAX = 50 + 10;

int N;
double a[MAX][MAX];

double gauss(int n) {
    double ans = 1;
    for (int i = 1; i <= n; i++) {
        for (int j = i + 1; j <= n; j++) {
            int t = i;
            if (abs(a[j][i]) > abs(a[t][i])) t = j;
            if (t != i) swap(a[t], a[i]), ans = -ans;
        }
        for (int j = i + 1; j <= n; j++) {
            double t = a[j][i] / a[i][i];
            for (int k = i; k <= n; k++)
                a[j][k] -= t * a[i][k];
        }
        ans *= a[i][i];
    }
    return abs(ans);
}

int main() {
    scanf("%d", &N);
    for (int i = 1; i <= N; i++)
        for (int j = 1; j <= N; j++)
            scanf("%lf", &a[i][j]);
    double ans = 1.0;
    for (int i = 1; i <= N; i++)
        for (int j = 1; j <= N; j++) {
            if (i == j) continue;
            if (abs(1 - a[i][j]) < eps) a[i][j] = 1.0 - eps;
            if (i < j) ans *= 1.0 - a[i][j];
            a[i][j] /= 1.0 - a[i][j];
        }
    for (int i = 1; i <= N; i++)
        for (int j = 1; j <= N; j++)
            if (i != j) a[i][i] += a[i][j], a[i][j] = -a[i][j];

    printf("%.8lf\n", gauss(N - 1) * ans);

    return 0;
}